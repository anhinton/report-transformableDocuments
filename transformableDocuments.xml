<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="xsl/preview.xsl"?>
<!-- Time-stamp: "2016-06-30 15:28:41 ahin017"-->
<!DOCTYPE document [
<!ENTITY mdash "&#x2014;">
<!ENTITY ndash "&#x2013;">
<!ENTITY us "_">
<!ENTITY tilde "~">
<!ENTITY bar "|">
]>
<document xmlns:xi="http://www.w3.org/2001/XInclude">
  
  <metadata>
    <title>Transforming documents with OpenAPI pipelines</title>
    <subtitle>Limits are for quitters</subtitle>
    <author>
      <name>Ashley Noel Hinton</name>
      <email>ahin017@aucklanduni.ac.nz</email>
      <affiliation>Department of Statistics, The University of
      Auckland</affiliation>
    </author>
    <date></date>
    <description>Technical report on transforming documents using an
    OpenAPI pipeline.</description>
  </metadata>

  <body>
    <div id="introduction">
      <p>Many technologies now exist for writing a document in common
      format to be transformed into various formats for sharing. This
      report proposes that using markup, rather than common markdown
      languages, is a good fit for writing flexible human- and
      machine-readable transformable documents. The examples in this
      report use OpenAPI pipelines to perform the document
      transformations into various document formats.  The pipelines
      produced show how such a task can be split into various reusable
      modules.</p>
    </div>
    
    <h1>The case for transformable documents</h1>
    
    <h1>The <code>document</code> format</h1>

    <p>The transformable document pipelines described in this report
    are based around an XML document with <code>document</code> as the
    root node. This document has two child elements: <code>metadata</code>
    and <code>body</code>.</p>

    <p>The <code>metadata</code> element contains the document metadata,
    with elements for the document <code>title</code> and
    <code>subtitle</code>, <code>author</code> information,
    <code>date</code> of publication, and a <code>description</code>
    section. An example <code>metadata</code> element follows:</p>

    <pre><code><xi:include href="metadataExample.xml" parse="text">
      <xi:fallback>xinclude metadataExample.html</xi:fallback>
    </xi:include></code></pre>

    <p>The <code>body</code> element contains the document's main
    content, and is intended to support all the elements available to
    HTML 4.01, as well as several elements designed
    specifically for document transformation.</p>

    <p>As in HTML 5 we can declare a <code>&lt;figure&gt;</code>
    element, which contains an <code>&lt;img&gt;</code> element and a
    <code>&lt;figcaption&gt;</code> element.</p>

    <p>We have <q>double quotes</q> using <code>&lt;q&gt;</code> and
    <sq>single quotes</sq> using <code>&lt;sq&gt;</code>. We can
    directly link like <url>https://github.com/anhinton/conduit</url>
    using <code>&lt;url&gt;</code> tags.</p>

    <p>Entities can be used for special characters as in:</p>

    <ul>
      <li><code>&amp;mdash;</code> &mdash; em dash</li>
      <li><code>&amp;ndash;</code> &ndash; en dash</li>
      <li><code>&amp;us;</code> &us; underscore</li>
      <li><code>&amp;tilde;</code> &tilde; tilde</li>
      <li><code>&amp;bar;</code> &bar; bar</li>
    </ul>

    <p>R code to be processed by knitr can be wrapped in a
    <code>&lt;code&gt;</code> element with
    <code>class="knitr"</code>. An author can also provide a
    <code>name</code> attribute for the knitr code chunk, as well as
    knitr <code>options</code>.</p>

    <code class="knitr" name="exchangeDemo" options="eval=FALSE">library(conduit)
exchangeRates &lt;- loadModule(
    name = "exchangeRates",
    ref = "examples/subsetting/exchange_rates.xml")
outputs &lt;- runModule(exchangeRates)
    </code>
    
    <h1>Transformation to HTML</h1>

    <h2>Do xinclude</h2>

    <p></p>

    <h2>XML entities</h2>

    <h2>R code comments</h2>

    <h2>Produce <code>.Rhtml</code> file</h2>

    <h2>Produce <code>.html</code> file</h2>
    
    <h1>Transformation to PDF</h1>

    <h2>Do xinclude</h2>

    <p></p>

    <h2>XML entities</h2>

    <h2>R code comments</h2>

    <h2>Produce <code>.Rtex</code> file</h2>

    <h2>Produce <code>.tex</code> file</h2>

    <h2>Produce <code>.pdf</code> file</h2>
    
    <h1>Background</h1>

    <div class="references">
      <h1 class="unnumbered">References</h1>
      <!-- citations not included in main text -->
      <cite key="w3c2008extensible"/>
      <xi:include href="references.html">
	<xi:fallback>Document processing will xinclude the contents of
	references.html</xi:fallback>
      </xi:include>
    </div>
    
    <h1>Technical requirements</h1>

    <p>This is an appendix section.</p>
  </body>
  
</document>
